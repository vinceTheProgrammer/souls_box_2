@using Sandbox;
@using Sandbox.UI;
@using SoulsBox
@inherits PanelComponent

<root>
    <div class="title" @ref="LockOnHudElement"></div>
</root>

@code
{

    [Property] AgentPlayer Player { get; set; }

    Panel LockOnHudElement { get; set; }
    Color? previousColor = Color.Parse("#b9eeffcc"); // make dynamic later

    protected override void OnUpdate()
    {
        if (Player == null)
        {
            Player = Game.ActiveScene.GetAllComponents<AgentPlayer>().FirstOrDefault(x => x.Network.IsOwner);
        }

        if (Player == null) return;

        if (LockOnHudElement == null || Player.CurrentLockOnAble == null) return;

        if (!Player.LockedOn)
        {
            LockOnHudElement.Style.BackgroundColor = Color.Transparent;
        } else
        {
            LockOnHudElement.Style.BackgroundColor = previousColor;
        }

        LockOnHudElement.Style.Top = Length.Fraction(Player.CurrentLockOnAble.Transform.Position.ToScreen().y);
        LockOnHudElement.Style.MarginTop = Length.Pixels(-1 * LockOnHudElement.Box.Rect.Height);
        LockOnHudElement.Style.Left = Length.Fraction(Player.CurrentLockOnAble.Transform.Position.ToScreen().x);
        LockOnHudElement.Style.MarginLeft = Length.Pixels(-1 * LockOnHudElement.Box.Rect.Width);
    }

    protected override int BuildHash()
    {
        if (Player == null || Player.CurrentLockOnAble == null) return 1;
        return System.HashCode.Combine(Player.LockedOn, Player.CurrentLockOnAble);
    }
}
